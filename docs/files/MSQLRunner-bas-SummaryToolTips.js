NDSummary.OnToolTipsLoaded("File:MSQLRunner.bas",{31:"<div class=\"NDToolTip TFile LVBA\"><div class=\"TTSummary\">Runs user defined queries on a given database and populates corresponding worksheets with the results.</div></div>",33:"<div class=\"NDToolTip TInformation LVBA\"><div class=\"TTSummary\">MGlobalConstants.bas</div></div>",34:"<div class=\"NDToolTip TInformation LVBA\"><div class=\"TTSummary\">Microsoft ActiveX Data Objects 2.8 Library</div></div>",35:"<div class=\"NDToolTip TInformation LVBA\"><div class=\"TTSummary\">Excel 2013, 2016</div></div>",36:"<div class=\"NDToolTip TInformation LVBA\"><div class=\"TTSummary\">This file is licensed under the MIT license.</div></div>",37:"<div class=\"NDToolTip TInformation LVBA\"><div class=\"TTSummary\">Jason Boyll</div></div>",39:"<div class=\"NDToolTip TFunction LVBA\"><div id=\"NDPrototype39\" class=\"NDPrototype NoParameterForm\">Public Sub StartExtraction()</div><div class=\"TTSummary\">Runs user defined queries on database and populates corresponding sheets with retrieved data. Main entry point for data extraction.</div></div>",40:"<div class=\"NDToolTip TFunction LVBA\"><div id=\"NDPrototype40\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\">Public Function OpenDatabase(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">ByVal dbConnection&nbsp;</td><td class=\"PType\">As&nbsp;</td><td class=\"PName last\">ADODB.Connection</td></tr></table></td><td class=\"PAfterParameters\">) As Boolean</td></tr></table></div><div class=\"TTSummary\">Attempts to open the requested database. Returns true if successful.</div></div>",41:"<div class=\"NDToolTip TFunction LVBA\"><div id=\"NDPrototype41\" class=\"NDPrototype NoParameterForm\">Public Function CreateConnectionString() As String</div><div class=\"TTSummary\">Returns the database connection string based on input values entered in the connection worksheet.</div></div>",42:"<div class=\"NDToolTip TFunction LVBA\"><div id=\"NDPrototype42\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\">Public Sub RunQueries(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">ByVal dbConnection&nbsp;</td><td class=\"PType\">As&nbsp;</td><td class=\"PName last\">ADODB.Connection</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Reads through and executes all consecutive queries stored in SQL tab on the specified database.</div></div>",43:"<div class=\"NDToolTip TFunction LVBA\"><div id=\"NDPrototype43\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\">Public Sub RunQuery(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">ByVal query&nbsp;</td><td class=\"PType\">As&nbsp;</td><td class=\"PName last\">Range,</td></tr><tr><td class=\"PModifierQualifier first\">ByVal dbConnection&nbsp;</td><td class=\"PType\">As&nbsp;</td><td class=\"PName last\">ADODB.Connection</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Executes the query from the given range on the specified database and copies records found to the corresponding output worksheet. If data is written to a worksheet, it is made visible. Worksheets that are marked as hidden on the SQL sheet remain hidden regardless of whether they were written to.</div></div>",44:"<div class=\"NDToolTip TFunction LVBA\"><div id=\"NDPrototype44\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\">Public Function ProcessQuery(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">ByVal query&nbsp;</td><td class=\"PType\">As&nbsp;</td><td class=\"PName last\">Range</td></tr></table></td><td class=\"PAfterParameters\">) As String</td></tr></table></div><div class=\"TTSummary\">Takes range where query is located and looks up cells to the right for find/replace strings to change in query. If adjacent cells are empty, the original query is returned unaltered.</div></div>",45:"<div class=\"NDToolTip TFunction LVBA\"><div id=\"NDPrototype45\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\">Public Function RecordsFound(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">ByVal wks&nbsp;</td><td class=\"PType\">As&nbsp;</td><td class=\"PName last\">Worksheet</td></tr></table></td><td class=\"PAfterParameters\">) As Boolean</td></tr></table></div><div class=\"TTSummary\">Takes a data sheet and checks the first row for data. If row is empty, the function returns false indicating that no records were found.</div></div>"});